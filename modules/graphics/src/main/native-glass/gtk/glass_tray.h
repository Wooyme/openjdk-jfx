/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <iostream>
#include <gtk/gtk.h>
#include <libappindicator/app-indicator.h>
/* Header for class com_sun_glass_ui_gtk_GtkTray */

#ifndef _Included_com_sun_glass_ui_gtk_GtkTray
#define _Included_com_sun_glass_ui_gtk_GtkTray
#define TRAY_APPINDICATOR_ID "my-tray"
AppIndicator *indicator = NULL;

struct tray_menu;

struct tray {
  char *icon;
  struct tray_menu *menu;
};

struct tray_menu {
  char *text;
  int id;
};

void _tray_menu_cb(void *item,struct tray_menu* data);

GtkMenuShell *_tray_menu(struct tray_menu *m) {
  GtkMenuShell *menu = (GtkMenuShell *)gtk_menu_new();
  for (; m != NULL && m->text != NULL; m++) {
    std::cout<<"Menu:"<<m->text<<" Id:"<<m->id<<std::endl;
    GtkWidget *item;
    if (strcmp(m->text, "-") == 0) {
      item = gtk_separator_menu_item_new();
    } else {
        item = gtk_menu_item_new_with_label(m->text);
//      if (m->submenu != NULL) {
//
//        gtk_menu_item_set_submenu(GTK_MENU_ITEM(item),
//                                  GTK_WIDGET(_tray_menu(m->submenu)));
//      } else {
//        item = gtk_check_menu_item_new_with_label(m->text);
//        gtk_check_menu_item_set_active(GTK_CHECK_MENU_ITEM(item), !!m->checked);
//      }
      gtk_widget_set_sensitive(item, 1);
      g_signal_connect(item, "activate", G_CALLBACK(_tray_menu_cb), m);
    }
    gtk_widget_show(item);
    gtk_menu_shell_append(menu, item);
  }
  return menu;
}

void tray_update(struct tray *tray) {
  app_indicator_set_icon(indicator, tray->icon);
  // GTK is all about reference counting, so previous menu should be destroyed
  // here
  app_indicator_set_menu(indicator, GTK_MENU(_tray_menu(tray->menu)));
}


int tray_init(struct tray *tray) {
//  if (gtk_init_check(0, NULL) == FALSE) {
//    return -1;
//  }
  indicator = app_indicator_new(TRAY_APPINDICATOR_ID, tray->icon,
                                APP_INDICATOR_CATEGORY_APPLICATION_STATUS);
  app_indicator_set_status(indicator, APP_INDICATOR_STATUS_ACTIVE);
  tray_update(tray);
  return 0;
}


#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_sun_glass_ui_gtk_GtkTray
 * Method:    initTrayNative
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_sun_glass_ui_gtk_GtkTray_initTrayNative
  (JNIEnv *, jobject,jstring);

/*
 * Class:     com_sun_glass_ui_gtk_GtkTray
 * Method:    addMenuNative
 * Signature: (JLjava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_sun_glass_ui_gtk_GtkTray_addMenuNative
  (JNIEnv *, jobject, jlong, jstring, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
